#!/bin/bash

addConfigureAC () {

BaseName=$1

ConfFiles1=""
for a in $*; do
    ConfFiles1="${ConfFiles1} src/${a}/${a}Config.h:config.h.in"
done
ConfFiles=$(echo ${ConfFiles1} | xargs)

    cat - > configure.ac <<CONFIGUREAC
AC_INIT([$(basename $(pwd))], [0.1], [YourName@Email.com])
AC_PREREQ([2.65])

# Set up the build system
git submodule init
git submodule update
AC_CONFIG_MACRO_DIR([build/autotools/m4])
AC_CONFIG_AUX_DIR([build/autotools/build])
AX_THOR_FUNC_BUILD


AC_CONFIG_SRCDIR([src/${BaseName}/${BaseName}.cpp])

# Find the C++ Copiler
# The minimumm requirements.
AC_PROG_CXX
AX_CHECK_COMPILE_FLAG([-ansi], [AC_SUBST([CXXFLAGS], ["$CXXFLAGS -ansi"])])
# Check what version of the C++ language is supported
AX_THOR_FUNC_LANG_FLAG(17)

# Find the code coverage tool.
# All the testing will depend on this.
AX_THOR_PROG_COV

# Add support for shared libraries.
LT_INIT
# Allow the configurations scripts to define --enabled-shared and --enable-static
# These flags define the THOR_TARGETLIBS Makefile variable. If your Makefile contains
# a target %.lib this affects which version of the library is build (by default shared only)
AX_THOR_LIB_SELECT


#
# Add your defintions in here.
# Note there are some predefined macros in build/autotools/m4/



# Build all the Makefiles and configuration files.
# Used by ThorMaker
# Note: you can push the config file to sub directories in the AC_CONFIG_HEADERS macro (see example)
# Note: Local Make variables should be placed in Makefile.config.in
AM_INIT_AUTOMAKE([foreign])
AC_CONFIG_HEADERS([config.h ${ConfFiles}])
AC_CONFIG_FILES([Makefile.extra Makefile.config:build/autotools/build/Makefile.config.in:Makefile.config.in])
AC_OUTPUT
CONFIGUREAC
}

addMakeFile () {

    mkdir -p $1
    cat - > $1/Makefile <<Makefile
THORSANVIL_ROOT             = \$(realpath $2)

TARGET                      = $3

include \$(THORSANVIL_ROOT)/build/tools/$4
Makefile
}

addMakeFileExtra () {

    #
    # These files are simply included to prevent automake from erroring.
    # Please don't use them for anything.
    echo "" > Makefile.extra.am
    echo "" > Makefile.extra.in
}

addMakeFileConfig () {

    cat - >> Makefile.config.in << MakefileConfig

# In this file add the variables defined with AC_SUBST
# They can then be included by surrounding with @
# AC_SUBST([ExampleMakeFileVariable], [ValueOfVariable])
ExampleMakeFileVariable=@ExampleMakeFileVariable@
MakefileConfig

}

addConfigHIN () {

    touch config.h.in
# This file will be autogenerated after autoreconf is run
# It uses the values defined by AC_DEFINE and AC_DEFINE_UNQUOTED
# AC_DEFINE([VarName], [Value], [Help displayed by config tools])
# AC_DEFINE_UNQUOTED([AnotherName],   [$variableToExpand],   [Help displayed by config tools])
    rm config.h.in

}

addGitIgnore () {

    cat - >> .gitignore << GitIgnore
*.o
*.lex.cpp
.*.swp

unittest

coverage/
debug/
release/
profile/
vera/

makefile_tmp
Makefile.extra
Makefile.config

aclocal.m4
autom4te.cache/

config.log
config.status

libtool
stamp-*

config.h
*Config.h
GitIgnore

}

echo "Starting Configuration"
if [[ ! -e configure.ac ]]; then

    if [[ ! -e .git ]]; then
        echo "We were expecting this to be a git repository"
        echo
        echo "Create one with: "
        echo "    git init"
        exit
    fi
    if [[ "$#" == "0" ]]; then
        echo "First time usage. Please provide the name of your package you want to build"
        echo
        echo "Exmaple:"
        echo "    ./Notes BobsPastry"
        echo
        echo "This will set up a basic project for building the shared library BobsPastry.so"
        exit
    fi
    echo "Building Example Configuration"
    BaseName=$*

    echo "Installing ThorMaker"
    git submodule init
    git submodule add git@github.com:Loki-Astari/ThorMaker.git build

    echo "Creating Base Autotools Files"
    addConfigureAC ${BaseName}
    addMakeFile . ./ src Project.Makefile
    addMakeFile src ../ "$*" Project.Makefile
    addMakeFileExtra
    addMakeFileConfig
    addConfigHIN
    addGitIgnore

    echo "Initial run of Autotools"
    autoreconf --install
    echo "" > Makefile.extra.in

    echo "Install First Source Files"
    for a in $*; do
        mkdir -p src/${a}
        echo "#include \"${a}.h\""       > src/${a}/${a}.cpp
        echo "#include \"${a}Config.h\"" > src/${a}/${a}.h 
        addMakeFile src/${a} ../../ ${a}.slib Makefile
    done

    echo "Adding base files to git"
    git add Notes
    git add configure configure.ac
    git add Makefile.config.in
    git add Makefile.extra.am Makefile.extra.in
    git add Makefile src/Makefile
    git add config.h.in
    git add .gitignore

    for a in $*; do
        git add src/${a}/${a}.cpp src/${a}/${a}.h src/${a}/Makefile
    done
    exit
fi

echo "Configuring"
autoreconf --install
echo "" > Makefile.extra.in

