#!/bin/bash

# Usage
# classInfo <file> <class>
#
# Gets the class info from a file:
#   Name of a parent class (if any)


program=$(cat - <<'AWK_PROGRAM'
BEGIN       {FOUND=0;tempInfo="";}
/template/  {tempInfo=$0;next}
/^\/\/ /    {if (FOUND == 1){next;}}
/^\/\//     {if (FOUND == 1){next;}}
/struct/    {
                parent="";
                if ($3 == "public")
                {
                    parent=$4;
                }
                sub("signed ", "signed-", $0);
                sub("long long", "long-long", $0);
                sub(/\(.*/, "", $0);
                gsub(/[ \t]+/, " ", $0);
                sub(":", "", $0);
                sub("<", "-L", $0);
                sub(">", "-R", $0);
                matchTypeNameString=sprintf("struct %s", Name);
                st=match($0, matchTypeNameString);
                if (FOUND == 1 && $0 == Name)
                {
                    printf("%s\n%s\n", parent, tempInfo);
                    exit;
                }
            }
/class/     {
                parent="";
                if ($3 == "public")
                {
                    parent=$4;
                }
                sub("signed ", "signed-", $0);
                sub("long long", "long-long", $0);
                sub(/\(.*/, "", $0);
                gsub(/[ \t]+/, " ", $0);
                sub(":", " ", $0);
                sub("<", "-L", $0);
                sub(">", "-R", $0);
                matchTypeNameString=sprintf("class %s", Name);
                st=match($0, matchTypeNameString);
                if (FOUND == 1 && st != 0)
                {
                    printf("%s\n%s\n", parent, tempInfo);
                    exit;
                }
            }
/@class/    {FOUND=1;}
AWK_PROGRAM
)

awk -v Name=$2 "${program}" $1
